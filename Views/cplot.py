# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Views/cplot.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from pyqtgraph import PlotWidget
import numpy as np
from Classes.ClassLaser import Laser


class Cplot(object):
    def __init__(self, host=None):
        self.plotData_withThread = None
        self.MainWindow = QtWidgets.QMainWindow()
        self.laser = Laser(host=host)
        self.worker_get = WorkerCplot(self.getCplot)

        self.timer = QtCore.QTimer()
        self.timer.setInterval(100)
        self.timer.timeout.connect(self.getCplot_withThread)
        self.timer.start()
        self.x = list(range(0, 200))
        self.y = [0] * 200

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1080, 1293)
        MainWindow.setStyleSheet("QMainWindow{\n"
                                 "    background-color:#333437;\n"
                                 "}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding,
                                           QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_5.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout_3.addWidget(self.lineEdit_5, 4, 1, 1, 1)
        self.Mon_Optical_Power_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Optical_Power_Laser_Diode.setStyleSheet("QLabel{\n"
                                                         "    color:#FAF9F9;\n"
                                                         "    font: 75 15pt \"Poppins\";\n"
                                                         "}")
        self.Mon_Optical_Power_Laser_Diode.setObjectName("Mon_Optical_Power_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Optical_Power_Laser_Diode, 5, 0, 1, 1)
        self.Status_Temp_Control_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Status_Temp_Control_Laser_Diode.setStyleSheet("QLabel{\n"
                                                           "    color:#FAF9F9;\n"
                                                           "    font: 75 15pt \"Poppins\";\n"
                                                           "}")
        self.Status_Temp_Control_Laser_Diode.setObjectName("Status_Temp_Control_Laser_Diode")
        self.gridLayout_3.addWidget(self.Status_Temp_Control_Laser_Diode, 8, 0, 1, 1)
        self.Mon_Temp_NTC_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Temp_NTC_Laser_Diode.setStyleSheet("QLabel{\n"
                                                    "    color:#FAF9F9;\n"
                                                    "    font: 75 15pt \"Poppins\";\n"
                                                    "}")
        self.Mon_Temp_NTC_Laser_Diode.setObjectName("Mon_Temp_NTC_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Temp_NTC_Laser_Diode, 1, 0, 1, 1)
        self.Mon_Current_TEC_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Current_TEC_Laser_Diode.setStyleSheet("QLabel{\n"
                                                       "    color:#FAF9F9;\n"
                                                       "    font: 75 15pt \"Poppins\";\n"
                                                       "}")
        self.Mon_Current_TEC_Laser_Diode.setObjectName("Mon_Current_TEC_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Current_TEC_Laser_Diode, 0, 0, 1, 1)
        self.Mon_Current_TEC_Case_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Current_TEC_Case_Laser_Diode.setStyleSheet("QLabel{\n"
                                                            "    color:#FAF9F9;\n"
                                                            "    font: 75 15pt \"Poppins\";\n"
                                                            "}")
        self.Mon_Current_TEC_Case_Laser_Diode.setObjectName("Mon_Current_TEC_Case_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Current_TEC_Case_Laser_Diode, 2, 0, 1, 1)
        self.Mon_Temp_NTC_Case_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Temp_NTC_Case_Laser_Diode.setStyleSheet("QLabel{\n"
                                                         "    color:#FAF9F9;\n"
                                                         "    font: 75 15pt \"Poppins\";\n"
                                                         "}")
        self.Mon_Temp_NTC_Case_Laser_Diode.setObjectName("Mon_Temp_NTC_Case_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Temp_NTC_Case_Laser_Diode, 3, 0, 1, 1)
        self.Enable_Current_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Enable_Current_Laser_Diode.setStyleSheet("QLabel{\n"
                                                      "    color:#FAF9F9;\n"
                                                      "    font: 75 15pt \"Poppins\";\n"
                                                      "}")
        self.Enable_Current_Laser_Diode.setObjectName("Enable_Current_Laser_Diode")
        self.gridLayout_3.addWidget(self.Enable_Current_Laser_Diode, 7, 0, 1, 1)
        self.Mon_Temp_LM35_Case_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Temp_LM35_Case_Laser_Diode.setStyleSheet("QLabel{\n"
                                                          "    color:#FAF9F9;\n"
                                                          "    font: 75 15pt \"Poppins\";\n"
                                                          "}")
        self.Mon_Temp_LM35_Case_Laser_Diode.setObjectName("Mon_Temp_LM35_Case_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Temp_LM35_Case_Laser_Diode, 6, 0, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_4.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout_3.addWidget(self.lineEdit_4, 3, 1, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_6.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout_3.addWidget(self.lineEdit_6, 5, 1, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_3.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_3.addWidget(self.lineEdit_3, 2, 1, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setStyleSheet("QLineEdit{\n"
                                    "    font: 13pt \"Poppins\";\n"
                                    "    background-color:white;\n"
                                    "    border-radius:3px;\n"
                                    "}")
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_3.addWidget(self.lineEdit, 0, 1, 1, 1)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_7.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.gridLayout_3.addWidget(self.lineEdit_7, 6, 1, 1, 1)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_8.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.gridLayout_3.addWidget(self.lineEdit_8, 7, 1, 1, 1)
        self.Mon_Current_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Mon_Current_Laser_Diode.setStyleSheet("QLabel{\n"
                                                   "    color:#FAF9F9;\n"
                                                   "    font: 75 15pt \"Poppins\";\n"
                                                   "}")
        self.Mon_Current_Laser_Diode.setObjectName("Mon_Current_Laser_Diode")
        self.gridLayout_3.addWidget(self.Mon_Current_Laser_Diode, 4, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_2.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_3.addWidget(self.lineEdit_2, 1, 1, 1, 1)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_9.setStyleSheet("QLineEdit{\n"
                                      "    font: 13pt \"Poppins\";\n"
                                      "    background-color:white;\n"
                                      "    border-radius:3px;\n"
                                      "}")
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.gridLayout_3.addWidget(self.lineEdit_9, 8, 1, 1, 1)
        self.Status_Temp_Control_Case_Laser_Diode = QtWidgets.QLabel(self.frame)
        self.Status_Temp_Control_Case_Laser_Diode.setStyleSheet("QLabel{\n"
                                                                "    color:#FAF9F9;\n"
                                                                "    font: 75 15pt \"Poppins\";\n"
                                                                "}")
        self.Status_Temp_Control_Case_Laser_Diode.setObjectName("Status_Temp_Control_Case_Laser_Diode")
        self.gridLayout_3.addWidget(self.Status_Temp_Control_Case_Laser_Diode, 9, 0, 1, 1)
        self.lineEdit_10 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_10.setStyleSheet("QLineEdit{\n"
                                       "    font: 13pt \"Poppins\";\n"
                                       "    background-color:white;\n"
                                       "    border-radius:3px;\n"
                                       "}")
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.gridLayout_3.addWidget(self.lineEdit_10, 9, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setStyleSheet("QPushButton {\n"
                                      "    background-color:#E5E5DB;\n"
                                      "    color:#303030;\n"
                                      "    border-radius:4px;\n"
                                      "    transition-duration: 0.4s;\n"
                                      "    height:20px;\n"
                                      "    width: 115px\n"
                                      "}\n"
                                      "                      \n"
                                      "QPushButton:hover {\n"
                                      "    background-color: #D4DAFF; \n"
                                      "    color:#FDFAEB;\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed {\n"
                                      "    background-color: #303030;\n"
                                      "    color:#FAF9F9;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_3.addWidget(self.pushButton, 0, 2, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_3.addWidget(self.pushButton_2, 1, 2, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_3.addWidget(self.pushButton_3, 2, 2, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_3.addWidget(self.pushButton_4, 3, 2, 1, 1)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame)
        self.pushButton_5.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout_3.addWidget(self.pushButton_5, 4, 2, 1, 1)
        self.pushButton_6 = QtWidgets.QPushButton(self.frame)
        self.pushButton_6.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout_3.addWidget(self.pushButton_6, 5, 2, 1, 1)
        self.pushButton_7 = QtWidgets.QPushButton(self.frame)
        self.pushButton_7.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_7.setObjectName("pushButton_7")
        self.gridLayout_3.addWidget(self.pushButton_7, 6, 2, 1, 1)
        self.pushButton_8 = QtWidgets.QPushButton(self.frame)
        self.pushButton_8.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_8.setObjectName("pushButton_8")
        self.gridLayout_3.addWidget(self.pushButton_8, 7, 2, 1, 1)
        self.pushButton_9 = QtWidgets.QPushButton(self.frame)
        self.pushButton_9.setStyleSheet("QPushButton {\n"
                                        "    background-color:#E5E5DB;\n"
                                        "    color:#303030;\n"
                                        "    border-radius:4px;\n"
                                        "    transition-duration: 0.4s;\n"
                                        "    height:20px;\n"
                                        "    width: 115px\n"
                                        "}\n"
                                        "                      \n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #D4DAFF; \n"
                                        "    color:#FDFAEB;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #303030;\n"
                                        "    color:#FAF9F9;\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.pushButton_9.setObjectName("pushButton_9")
        self.gridLayout_3.addWidget(self.pushButton_9, 8, 2, 1, 1)
        self.pushButton_10 = QtWidgets.QPushButton(self.frame)
        self.pushButton_10.setStyleSheet("QPushButton {\n"
                                         "    background-color:#E5E5DB;\n"
                                         "    color:#303030;\n"
                                         "    border-radius:4px;\n"
                                         "    transition-duration: 0.4s;\n"
                                         "    height:20px;\n"
                                         "    width: 115px\n"
                                         "}\n"
                                         "                      \n"
                                         "QPushButton:hover {\n"
                                         "    background-color: #D4DAFF; \n"
                                         "    color:#FDFAEB;\n"
                                         "}\n"
                                         "\n"
                                         "QPushButton:pressed {\n"
                                         "    background-color: #303030;\n"
                                         "    color:#FAF9F9;\n"
                                         "}\n"
                                         "\n"
                                         "")
        self.pushButton_10.setObjectName("pushButton_10")
        self.gridLayout_3.addWidget(self.pushButton_10, 9, 2, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding,
                                           QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.plotwidget_cplot = PlotWidget(parent=self.frame_2)
        self.plotwidget_cplot.setObjectName("plotwidget_cplot")
        self.plotwidget_cplot.setLabel(axis='left', text='Temperature [°C] (fuck you Faraday)')
        self.plotwidget_cplot.setLabel(axis='bottom', text='time [s]')
        self.gridLayout_2.addWidget(self.plotwidget_cplot, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame_2, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        # connect buttons with methods.
        self.pushButton.clicked.connect(self.button)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Mon_Optical_Power_Laser_Diode.setText(
            _translate("MainWindow", "Indicateur de puissance optique (valeur non linéaire). \n"
                                     "Ne sert qu’à savoir si la diode émet et si sa puissance n\'a fluctuée."))
        self.Status_Temp_Control_Laser_Diode.setText(
            _translate("MainWindow", "Signal d’entrée pour savoir si l’asservissement de\n"
                                     "température de la diode fonctionne correctement\n"
                                     "OK : La température de consigne a été atteinte et est\n"
                                     "asservie."))
        self.Mon_Temp_NTC_Laser_Diode.setText(_translate("MainWindow", "Température de la diode "))
        self.Mon_Current_TEC_Laser_Diode.setText(
            _translate("MainWindow", "Courant dans le module peltier de la diode pour l\'asservir en température"))
        self.Mon_Current_TEC_Case_Laser_Diode.setText(
            _translate("MainWindow", "Courant dans le module peltier du boitier enfermant la diode \n"
                                     "pour l’asservir en température"))
        self.Mon_Temp_NTC_Case_Laser_Diode.setText(
            _translate("MainWindow", "Température dans le boitier, mesurée par thermistance) "))
        self.Enable_Current_Laser_Diode.setText(
            _translate("MainWindow", "Signal de sortie pour allumer/éteindre la diode\n"
                                     "ON : Diode allumé / OFF : Diode éteinte"))
        self.Mon_Temp_LM35_Case_Laser_Diode.setText(_translate("MainWindow", "Température dans le boitier\n"
                                                                             "(mesurée par LM35)"))
        self.Mon_Current_Laser_Diode.setText(_translate("MainWindow", "Courant de la diode"))
        self.Status_Temp_Control_Case_Laser_Diode.setText(
            _translate("MainWindow", "Signal d’entrée pour savoir si l’asservissement de\n"
                                     "température du boitier fonctionne correctement\n"
                                     "OK : La température de consigne a été atteinte et est\n"
                                     "asservie."))
        self.pushButton.setText(_translate("MainWindow", "Plot"))
        self.pushButton_2.setText(_translate("MainWindow", "Plot"))
        self.pushButton_3.setText(_translate("MainWindow", "Plot"))
        self.pushButton_4.setText(_translate("MainWindow", "Plot"))
        self.pushButton_5.setText(_translate("MainWindow", "Plot"))
        self.pushButton_6.setText(_translate("MainWindow", "Plot"))
        self.pushButton_7.setText(_translate("MainWindow", "Plot"))
        self.pushButton_8.setText(_translate("MainWindow", "Plot"))
        self.pushButton_9.setText(_translate("MainWindow", "Plot"))
        self.pushButton_10.setText(_translate("MainWindow", "Plot"))

    def getCplot(self):
        """
        Take the return of the laser as a list and cut it for each value. need to run in a sub_thread, independently of
        the main thread of mainWindow.
        :return: all
        """
        # the first part consists in using str to set text in the different lineEdits
        cplot: str = str(self.laser.get_cplot())
        I_peltier_asserv_temp: str = cplot[61:66] + " V"
        self.lineEdit.setText(I_peltier_asserv_temp)
        diode_temp: str = cplot[134:139] + "°C"
        self.lineEdit_2.setText(diode_temp)
        I_peltier_asserv_temp_boitier: str = cplot[174:179] + " V"
        self.lineEdit_3.setText(I_peltier_asserv_temp_boitier)
        boitier_thermistance_temp = None
        self.lineEdit_4.setText(boitier_thermistance_temp)
        I_diode: str = cplot[287:291] + "mA"
        self.lineEdit_5.setText(I_diode)
        power: str = cplot[362:367] + " V"
        self.lineEdit_6.setText(power)
        temp_boitier: str = cplot[460:465] + "°C"
        self.lineEdit_7.setText(temp_boitier)
        diode_state: str = cplot[207:211]
        self.lineEdit_8.setText(diode_state)
        asserv_diode_state: str = cplot[326:329]
        self.lineEdit_9.setText(asserv_diode_state)
        asserv_boitier_state: str = cplot[407:420]
        self.lineEdit_10.setText(asserv_boitier_state)

        # the second part consists in translate str in float and return them to use them
        diode_temp = float(cplot[134:139])
        if type(diode_temp) != float:
            pass
        else:
            self.plotData(diode_temp)

        """(I_peltier_asserv_temp, diode_temp, I_peltier_asserv_temp_boitier, boitier_thermistance_temp, I_diode,
                        power, temp_boitier, diode_state, asserv_diode_state, asserv_boitier_state)"""

        return diode_temp

    def plotData(self, data):
        self.x.append(self.x[-1] + 1)
        self.y.append(data)
        self.x = self.x[1:]
        self.y = self.y[1:]
        self.plotwidget_cplot.plot(self.x, self.y)

    def getCplot_withThread(self):
        """
        method that calls the class Worker for data.
        :return:
        """
        self.worker_get.get_data()

    def button(self):
        data = self.getCplot()[0]
        self.worker_plot = WorkerDataPot(self.plotData(data))
        self.timer2 = QtCore.QTimer()
        self.timer2.setInterval(1000)
        self.timer2.timeout.connect(self.plotData_withThread)


class WorkerCplot(QtCore.QThread):
    output = QtCore.pyqtSignal(str)

    def __init__(self, fun, parent=None):
        """
        initialise la fonction aui plot
        :param fun: fonction sur laquelle on boucle
        :param parent:
        """
        QtCore.QThread.__init__(self, parent)
        self.fun = fun

    def get_data(self):
        try:
            self.start()
        except:
            pass

    def run(self):
        """
        :return: None
        """
        try:
            self.fun()
            self.output.emit(self.fun)
        except:
            pass


class WorkerDataPot(QtCore.QThread):
    output = QtCore.pyqtSignal(np.ndarray)

    def __init__(self, fun, parent=None):
        QtCore.QThread.__init__(self, parent)
        self.fun = fun

    def get_data(self):
        try:
            self.start()
        except:
            pass

    def run(self):
        try:
            self.fun()
            self.output.emit(self.fun)
        except:
            pass
